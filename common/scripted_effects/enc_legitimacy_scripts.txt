update_legitimacy = { # currently unused
	hidden_effect = {
		# we cannot use a non temp variable for trigger comparisons
		set_temp_variable = {
			var = legitimacy_change_var
			value = enc_legitimacy
		}
		if  = { # value is higher than 75, assign high effect and remove the rest
			limit = {
				check_variable = {
					var = legitimacy_change_var
					value > 0.749
				}
			}
			if = {
				limit = {
					NOT = {
						# has dynamic idea high legitimacy
					}
				}
				# clear ideas
				add_ideas = {
					ENC_legitimacy_medium
				}
			}
		}
		else_if  = { # value is between 75 and 50, assign medium effect and remove the rest
			limit = {
				check_variable = {
					var = legitimacy_change_var
					value > 0.499
				}
			}
			hidden_effect = {
				remove_ideas = {
					ENC_legitimacy_high
					ENC_legitimacy_low
					ENC_legitimacy_none
				}
			}
			if = {
				limit = {
					NOT = {
						has_idea = ENC_legitimacy_medium
					}
				}
				add_ideas = {
					ENC_legitimacy_medium
				}
			}
		}
		else_if  = { # value is between 50 and 25, assign low effect and remove the rest
			limit = {
				check_variable = {
					var = legitimacy_change_var
					value > 0.249
				}
			}
			hidden_effect = {
				remove_ideas = {
					ENC_legitimacy_high
					ENC_legitimacy_medium
					ENC_legitimacy_none
				}
			}
			if = {
				limit = {
					NOT = {
						has_idea = ENC_legitimacy_low
					}
				}
				add_ideas = {
					ENC_legitimacy_low
				}
			}
		}
		else = { # value is between 0 and 25, assign lowest effect and remove the rest
			hidden_effect = {
				remove_ideas = {
					ENC_legitimacy_high
					ENC_legitimacy_medium
					ENC_legitimacy_low
				}
			}
			if = {
				limit = {
					NOT = {
						has_idea = ENC_legitimacy_none
					}
				}
				add_ideas = {
					ENC_legitimacy_none
				}
			}
		}
	}
}

clear_legitimacy = {

}

change_legitimacy = {
	if = {
		limit = {
			NOT = {
				has_country_flag = legitimacy_disabled
			}
		}
		balance_legitimacy_gain = yes

		# add free stability if legitimacy past 100%
		set_temp_variable = { legitimacy_overflow_buffer = enc_legitimacy }
		add_to_temp_variable = { legitimacy_overflow_buffer = legitimacy_change_var }
		subtract_from_temp_variable = { legitimacy_overflow_buffer = 1 }
		if = {
			limit = {
				check_variable = { legitimacy_overflow_buffer > 0 }
			}
			subtract_from_temp_variable = { legitimacy_change_var = legitimacy_overflow_buffer}
		}

		add_to_variable  = { enc_legitimacy = legitimacy_change_var	}
		if = {
			limit = {
				check_variable = { legitimacy_change_var < 0 }
			}
			custom_effect_tooltip = lose_legitimacy_tt
		}
		else_if  = {
			limit = {
				check_variable = { legitimacy_change_var > 0 }
			}
			custom_effect_tooltip = gain_legitimacy_tt
		}
		if = {
			limit = {
				check_variable = { legitimacy_overflow_buffer > 0 }
			}
			custom_effect_tooltip = legitimacy_overflow_tt
			add_stability = legitimacy_overflow_buffer
		}
	}
	advanced_update_legitimacy = yes
	clamp_variable = { # move this clamp
		var = enc_legitimacy
		min = 0
		max = 1
	}
}

has_more_legitimacy = {
	# custom_trigger_tooltip = {
		# tooltip = has_legitimacy_tt
		# check_variable = {
			# var = enc_legitimacy
			# value > legitimacy_check_var
		# }
	# }
}

balance_legitimacy_gain = {
	if = { # if positive legitimacy gain
		limit = {
			check_variable = { legitimacy_change_var > 0 }
		}
		multiply_temp_variable = { legitimacy_change_var = 1 }
	}
	else = { # if negative legitimacy gain
		multiply_temp_variable = { legitimacy_change_var = 1 }
	}
}

advanced_update_legitimacy = {
	# our legitimacy_modifier_var will be a percentage between -100% and 100%
	# it will be applied to a numner of specific modifiers, to determine their strength based on legitimacy
	# the formula is (legitimacy - 50%) * 2. So that each percentage of legitimacy above and below 50% accounts for 2% of positive and negative modifier strength respectively

	set_variable = { legitimacy_modifier_var = enc_legitimacy }
	subtract_from_variable  = { legitimacy_modifier_var = 0.50 }
	multiply_variable = { legitimacy_modifier_var = 2 }
	# this IF block activates when the player has less than 50% legitimacy, IE the legitimacy_modifier_var is less than 0, IE the modifier effects will be negative
	# currently, it calculates the amount of non-enclave population so that the negative effects of low legitimacy scale with non-enclave population
	# the result is that low legitimacy early game is no problem, low legitimacy late is horrible

	# impact of negative impact is decided by how much of your population is non-enclave ( 1 - (10k / total population))
	set_variable = { enc_percentage_population_non_enclave = 1 } # start at 100%, then we subtract Enclave population
	set_variable = { enclave_population = 39.state_population } # TODO: replace placeholder
	# calculate total population
	hidden_effect = {
		set_variable = { enc_total_population = 0 }
		every_owned_state = { # calculate total population, MTG has a country var for this, I think.
			# limit = { is_core_of = ROOT }
			add_to_variable = { ROOT.enc_total_population = THIS.state_population }
		}
	}

	# calculate percentage of population that is enclave by dividing enc pop by total pop
	set_variable = { enc_percentage_population_enclave = enclave_population }
	# enclave_population variable now represents the percentage of the population that is NON-enclave
	divide_variable = { enc_percentage_population_enclave = enc_total_population }
	# Now we multiply our legitimacy_modifier_var by the amount of non-enclave population. Since Enclave pops don't care about legitimacy.
	subtract_from_variable = { enc_percentage_population_non_enclave = enc_percentage_population_enclave }

	# weigh Enclave population to be more important
	set_temp_variable = { weighed_non_enclave_population = enc_percentage_population_enclave }
	multiply_temp_variable = { weighed_non_enclave_population = 3 } # amount of weighing
	set_temp_variable = { weighed_population_modifier = enc_percentage_population_non_enclave }
	subtract_from_temp_variable  = { weighed_population_modifier = weighed_non_enclave_population }
	clamp_temp_variable = {	var = weighed_population_modifier min = 0 max = 1	}

	# apply this all to the legitimacy_modifier_var
	multiply_variable = { legitimacy_modifier_var = weighed_population_modifier }

	# Finally, we multiple the result by the enc_legitimacy_relevance (defaulting to 1 for no effect)
	# the function of this variable is to be modified elsewhere by national focuses that make negative legitimacy less relevant (the segregationist / authoritarian ones)
	multiply_variable = { legitimacy_modifier_var = enc_legitimacy_relevance?1 }

	# time to set the variables that will affect our dynamic legitimacy modifier

	# set political_power_factor bonus
	set_variable = { enc_legitimacy_political_power_factor = 0.30 }
	multiply_variable = { enc_legitimacy_political_power_factor = legitimacy_modifier_var }

	# set political_power_factor bonus
	set_variable = { enc_legitimacy_compliance_growth = 0.25 }
	multiply_variable = { enc_legitimacy_compliance_growth = legitimacy_modifier_var }

	# set political_power_factor bonus
	set_variable = { enc_legitimacy_mobilization_speed = 0.30 }
	multiply_variable = { enc_legitimacy_mobilization_speed = legitimacy_modifier_var }

	#custom_effect_tooltip = legitimacy_variable_details
	#custom_effect_tooltip = legitimacy_variable_details2

	# other suggested effects

	# political_power_factor

	# non_core_manpower
	# conscription
	# conscription_factor
	# mobilization_speed

	# army_core_attack_factor
	# army_core_defence_factor
	# army_org_factor
	# army_morale_factor

	# MONTHLY_POPULATION
	# production_speed_civilian_power_grid_factor
	# consumer_goods_factor
	# industrial_capacity_factory
	# production_speed_buildings_factor
	# local_resources_factor
}

reduce_legitimacy_relevance = {
	multiply_variable = { enc_legitimacy_relevance = enc_reduce_legitimacy_relevance_factor?0.66 }
	custom_effect_tooltip = reduce_legitimacy_relevance_tt
	hidden_effect = { advanced_update_legitimacy = yes }
}

##################################
# EFFECT
##################################
# set_temp_variable = {
	# var = legitimacy_change_var
	# value = 5
# }
# change_legitimacy = YES

# set_temp_variable = {
	# var = legitimacy_check_var
	# value = 100
# }
# legitimacy_check_var = YES
